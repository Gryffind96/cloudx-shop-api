service: import-service
frameworkVersion: '3'
provider:
  name: aws
  runtime: nodejs16.x
  httpApi:
    authorizers: 
      basicAuthorizer: 
        type: request
        functionArn: arn:aws:lambda:us-east-1:887240492441:function:authorization-service-dev-basicAuthorizer
        identitySource: 
          - $request.header.Authorization
        payloadVersion: '2.0'
    cors:
      allowedOrigins:
        - https://d1bzgc5m0vvtgp.cloudfront.net
        - http://localhost:4200
  stage: dev
  region: us-east-1
  environment:
    BUCKET_NAME: eshop-task-5
    QUEUE_URL: "https://sqs.us-east-1.amazonaws.com/887240492441/catalogItemsQueue"
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::887240492441:policy/S3LambdaReadability
      statements:
        - Effect: Allow
          Action: "s3:ListBucket"
          Resource: 
            - arn:aws:s3:::eshop-task-5
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "*"
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: "arn:aws:sqs:us-east-1:887240492441:catalogItemsQueue"    
functions: 
  importProductsFile:
    handler: importProductsFile.handler
    events:
      - httpApi:
          path: /import
          method: get
          authorizer: 
            name: basicAuthorizer
  importFileParser:
    handler: importFileParser.handler
    events:
      - s3:
          bucket: eshop-task-5
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true